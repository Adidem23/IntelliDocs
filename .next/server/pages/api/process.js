"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/process";
exports.ids = ["pages/api/process"];
exports.modules = {

/***/ "@google/generative-ai":
/*!****************************************!*\
  !*** external "@google/generative-ai" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@google/generative-ai");

/***/ }),

/***/ "@pinecone-database/pinecone":
/*!**********************************************!*\
  !*** external "@pinecone-database/pinecone" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = require("@pinecone-database/pinecone");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "pdfjs-dist/legacy/build/pdf":
/*!**********************************************!*\
  !*** external "pdfjs-dist/legacy/build/pdf" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = require("pdfjs-dist/legacy/build/pdf");

/***/ }),

/***/ "(api)/./pages/api/process.js":
/*!******************************!*\
  !*** ./pages/api/process.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var pdfjs_dist_legacy_build_pdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdfjs-dist/legacy/build/pdf */ \"pdfjs-dist/legacy/build/pdf\");\n/* harmony import */ var pdfjs_dist_legacy_build_pdf__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pdfjs_dist_legacy_build_pdf__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_models_MyFile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/models/MyFile */ \"(api)/./src/models/MyFile.js\");\n/* harmony import */ var _src_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/src/db */ \"(api)/./src/db.js\");\n/* harmony import */ var _src_openaiServices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/src/openaiServices */ \"(api)/./src/openaiServices.js\");\n/* harmony import */ var _src_pinecone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/src/pinecone */ \"(api)/./src/pinecone.js\");\n\n\n\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(400).json({\n            message: \"http method not allowed\"\n        });\n    }\n    try {\n        // 2. connect to mongodb\n        await (0,_src_db__WEBPACK_IMPORTED_MODULE_2__.connectDB)();\n        // 3. query the file by id\n        const { id  } = req.body;\n        const myFile = await _src_models_MyFile__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findById(id);\n        if (!myFile) {\n            return res.status(400).json({\n                message: \"file not found\"\n            });\n        }\n        if (myFile.isProcessed) {\n            return res.status(400).json({\n                message: \"file is already processed\"\n            });\n        }\n        // 4. Read PDF and iterate through pages\n        let vectors = [];\n        console.log(myFile.fileUrl);\n        let myFiledata = await fetch(myFile.fileUrl);\n        if (myFiledata.ok) {\n            console.log(\"It is Going Inside This Function above PDF\");\n            let pdfDoc = await pdfjs_dist_legacy_build_pdf__WEBPACK_IMPORTED_MODULE_0__.getDocument(await myFiledata.arrayBuffer()).promise;\n            console.log(\"PDF is : \" + pdfDoc._pdfInfo);\n            const numPages = pdfDoc.numPages;\n            for(let i = 0; i < numPages; i++){\n                let page = await pdfDoc.getPage(i + 1);\n                // console.log(\"Single Page is : \" + page);\n                let textContent = await page.getTextContent();\n                // console.log(\"TextContent is : \" + textContent);\n                const text = textContent.items.map((item)=>item.str).join(\"\");\n                // console.log(\"Text is: \" + text);\n                // 5. Get embeddings for each page\n                const embedding = await (0,_src_openaiServices__WEBPACK_IMPORTED_MODULE_3__.generateEmbeddingsGemini)(text);\n                console.log(\"Embeddings are : \" + embedding);\n                // 6. push to vector array\n                vectors.push({\n                    id: `page${i + 1}`,\n                    values: embedding,\n                    metadata: {\n                        pageNum: i + 1,\n                        text\n                    }\n                });\n            }\n            // 7. initialize pinecone\n            // await initialize() // initialize pinecone\n            // 8. connect to the index\n            const index = _src_pinecone__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Index(myFile.vectorIndex);\n            console.log(\"Index created are :  : \" + index);\n            // await index.upsert({\n            // \tupsertRequest: {\n            // \t\tvectors,\n            // \t}\n            // });\n            await index.upsert(vectors);\n            // 10. update mongodb with isProcessed to true\n            myFile.isProcessed = true;\n            await myFile.save();\n            // await disconnectDB()\n            // 11. return the response\n            return res.status(200).json({\n                message: \"File processed successfully\"\n            });\n        } else {\n            // await disconnectDB()\n            return res.status(500).json({\n                message: \"error getting file contents\"\n            });\n        }\n    } catch (e) {\n        console.log(\"Error is Occured : \" + e.message);\n        // await disconnectDB()\n        return res.status(500).json({\n            message: e.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O1FBQ3RFLENBQUM7SUFDRixFQUFFLE9BQU93QyxHQUFHO1FBQ1hqQyxRQUFRQyxHQUFHLENBQUMsd0JBQXdCZ0MsRUFBRXhDLE9BQU87UUFDN0MsdUJBQXVCO1FBQ3ZCLE9BQU9KLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBU3dDLEVBQUV4QyxPQUFPO1FBQUM7SUFDbEQ7QUFDRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFwZXJib3QvLi9wYWdlcy9hcGkvcHJvY2Vzcy5qcz9hMGRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFBERkpTIGZyb20gJ3BkZmpzLWRpc3QvbGVnYWN5L2J1aWxkL3BkZic7XG5pbXBvcnQgTXlGaWxlTW9kZWwgZnJvbSBcIkAvc3JjL21vZGVscy9NeUZpbGVcIjtcbmltcG9ydCB7IGNvbm5lY3REQiwgZGlzY29ubmVjdERCIH0gZnJvbSBcIkAvc3JjL2RiXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZUVtYmVkZGluZ3NHZW1pbmkgfSBmcm9tIFwiQC9zcmMvb3BlbmFpU2VydmljZXNcIjtcbmltcG9ydCBwaW5lY29uZSBmcm9tIFwiQC9zcmMvcGluZWNvbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuXG5cdGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcblx0XHRyZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnaHR0cCBtZXRob2Qgbm90IGFsbG93ZWQnIH0pXG5cdH1cblxuXHR0cnkge1xuXHRcdC8vIDIuIGNvbm5lY3QgdG8gbW9uZ29kYlxuXHRcdGF3YWl0IGNvbm5lY3REQigpXG5cblx0XHQvLyAzLiBxdWVyeSB0aGUgZmlsZSBieSBpZFxuXHRcdGNvbnN0IHsgaWQgfSA9IHJlcS5ib2R5XG5cblx0XHRjb25zdCBteUZpbGUgPSBhd2FpdCBNeUZpbGVNb2RlbC5maW5kQnlJZChpZClcblxuXHRcdGlmICghbXlGaWxlKSB7XG5cdFx0XHRyZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnZmlsZSBub3QgZm91bmQnIH0pXG5cdFx0fVxuXG5cdFx0aWYgKG15RmlsZS5pc1Byb2Nlc3NlZCkge1xuXHRcdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ2ZpbGUgaXMgYWxyZWFkeSBwcm9jZXNzZWQnIH0pXG5cdFx0fVxuXG5cdFx0Ly8gNC4gUmVhZCBQREYgYW5kIGl0ZXJhdGUgdGhyb3VnaCBwYWdlc1xuXHRcdGxldCB2ZWN0b3JzID0gW11cblxuXHRcdGNvbnNvbGUubG9nKG15RmlsZS5maWxlVXJsKTtcblx0XHRsZXQgbXlGaWxlZGF0YSA9IGF3YWl0IGZldGNoKG15RmlsZS5maWxlVXJsKVxuXG5cdFx0aWYgKG15RmlsZWRhdGEub2spIHtcblxuXHRcdFx0Y29uc29sZS5sb2coXCJJdCBpcyBHb2luZyBJbnNpZGUgVGhpcyBGdW5jdGlvbiBhYm92ZSBQREZcIilcblxuXHRcdFx0bGV0IHBkZkRvYyA9IGF3YWl0IFBERkpTLmdldERvY3VtZW50KGF3YWl0IG15RmlsZWRhdGEuYXJyYXlCdWZmZXIoKSkucHJvbWlzZTtcblx0XHRcdGNvbnNvbGUubG9nKFwiUERGIGlzIDogXCIgKyBwZGZEb2MuX3BkZkluZm8pO1xuXG5cdFx0XHRjb25zdCBudW1QYWdlcyA9IHBkZkRvYy5udW1QYWdlcztcblxuXHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBudW1QYWdlczsgaSsrKSB7XG5cblx0XHRcdFx0bGV0IHBhZ2UgPSBhd2FpdCBwZGZEb2MuZ2V0UGFnZShpICsgMSlcblx0XHRcdFx0Ly8gY29uc29sZS5sb2coXCJTaW5nbGUgUGFnZSBpcyA6IFwiICsgcGFnZSk7XG5cblx0XHRcdFx0bGV0IHRleHRDb250ZW50ID0gYXdhaXQgcGFnZS5nZXRUZXh0Q29udGVudCgpXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKFwiVGV4dENvbnRlbnQgaXMgOiBcIiArIHRleHRDb250ZW50KTtcblxuXHRcdFx0XHRjb25zdCB0ZXh0ID0gdGV4dENvbnRlbnQuaXRlbXMubWFwKGl0ZW0gPT4gaXRlbS5zdHIpLmpvaW4oJycpO1xuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyhcIlRleHQgaXM6IFwiICsgdGV4dCk7XG5cblx0XHRcdFx0Ly8gNS4gR2V0IGVtYmVkZGluZ3MgZm9yIGVhY2ggcGFnZVxuXHRcdFx0XHRjb25zdCBlbWJlZGRpbmcgPSBhd2FpdCBnZW5lcmF0ZUVtYmVkZGluZ3NHZW1pbmkodGV4dClcblx0XHRcdFx0Y29uc29sZS5sb2coXCJFbWJlZGRpbmdzIGFyZSA6IFwiICsgZW1iZWRkaW5nKTtcblxuXHRcdFx0XHQvLyA2LiBwdXNoIHRvIHZlY3RvciBhcnJheVxuXHRcdFx0XHR2ZWN0b3JzLnB1c2goe1xuXHRcdFx0XHRcdGlkOiBgcGFnZSR7aSArIDF9YCxcblx0XHRcdFx0XHR2YWx1ZXM6IGVtYmVkZGluZyxcblx0XHRcdFx0XHRtZXRhZGF0YToge1xuXHRcdFx0XHRcdFx0cGFnZU51bTogaSArIDEsXG5cdFx0XHRcdFx0XHR0ZXh0LFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0pXG5cblx0XHRcdH1cblxuXG5cdFx0XHQvLyA3LiBpbml0aWFsaXplIHBpbmVjb25lXG5cdFx0XHQvLyBhd2FpdCBpbml0aWFsaXplKCkgLy8gaW5pdGlhbGl6ZSBwaW5lY29uZVxuXG5cdFx0XHQvLyA4LiBjb25uZWN0IHRvIHRoZSBpbmRleFxuXHRcdFx0Y29uc3QgaW5kZXggPSBwaW5lY29uZS5JbmRleChteUZpbGUudmVjdG9ySW5kZXgpXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkluZGV4IGNyZWF0ZWQgYXJlIDogIDogXCIraW5kZXgpO1xuXG5cdFx0XHQvLyBhd2FpdCBpbmRleC51cHNlcnQoe1xuXHRcdFx0Ly8gXHR1cHNlcnRSZXF1ZXN0OiB7XG5cdFx0XHQvLyBcdFx0dmVjdG9ycyxcblx0XHRcdC8vIFx0fVxuXHRcdFx0Ly8gfSk7XG5cblx0XHRcdGF3YWl0IGluZGV4LnVwc2VydCh2ZWN0b3JzKTtcblxuXHRcdFx0Ly8gMTAuIHVwZGF0ZSBtb25nb2RiIHdpdGggaXNQcm9jZXNzZWQgdG8gdHJ1ZVxuXHRcdFx0bXlGaWxlLmlzUHJvY2Vzc2VkID0gdHJ1ZVxuXHRcdFx0YXdhaXQgbXlGaWxlLnNhdmUoKVxuXHRcdFx0Ly8gYXdhaXQgZGlzY29ubmVjdERCKClcblxuXHRcdFx0Ly8gMTEuIHJldHVybiB0aGUgcmVzcG9uc2Vcblx0XHRcdHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdGaWxlIHByb2Nlc3NlZCBzdWNjZXNzZnVsbHknIH0pXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIGF3YWl0IGRpc2Nvbm5lY3REQigpXG5cdFx0XHRyZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnZXJyb3IgZ2V0dGluZyBmaWxlIGNvbnRlbnRzJyB9KVxuXHRcdH1cblx0fSBjYXRjaCAoZSkge1xuXHRcdGNvbnNvbGUubG9nKFwiRXJyb3IgaXMgT2NjdXJlZCA6IFwiICsgZS5tZXNzYWdlKTtcblx0XHQvLyBhd2FpdCBkaXNjb25uZWN0REIoKVxuXHRcdHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IGUubWVzc2FnZSB9KVxuXHR9XG59Il0sIm5hbWVzIjpbIlBERkpTIiwiTXlGaWxlTW9kZWwiLCJjb25uZWN0REIiLCJkaXNjb25uZWN0REIiLCJnZW5lcmF0ZUVtYmVkZGluZ3NHZW1pbmkiLCJwaW5lY29uZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImlkIiwiYm9keSIsIm15RmlsZSIsImZpbmRCeUlkIiwiaXNQcm9jZXNzZWQiLCJ2ZWN0b3JzIiwiY29uc29sZSIsImxvZyIsImZpbGVVcmwiLCJteUZpbGVkYXRhIiwiZmV0Y2giLCJvayIsInBkZkRvYyIsImdldERvY3VtZW50IiwiYXJyYXlCdWZmZXIiLCJwcm9taXNlIiwiX3BkZkluZm8iLCJudW1QYWdlcyIsImkiLCJwYWdlIiwiZ2V0UGFnZSIsInRleHRDb250ZW50IiwiZ2V0VGV4dENvbnRlbnQiLCJ0ZXh0IiwiaXRlbXMiLCJtYXAiLCJpdGVtIiwic3RyIiwiam9pbiIsImVtYmVkZGluZyIsInB1c2giLCJ2YWx1ZXMiLCJtZXRhZGF0YSIsInBhZ2VOdW0iLCJpbmRleCIsIkluZGV4IiwidmVjdG9ySW5kZXgiLCJ1cHNlcnQiLCJzYXZlIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/process.js\n");

/***/ }),

/***/ "(api)/./src/db.js":
/*!*******************!*\
  !*** ./src/db.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectDB\": () => (/* binding */ connectDB),\n/* harmony export */   \"disconnectDB\": () => (/* binding */ disconnectDB)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function connectDB() {\n    if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connections[0].readyState)) {\n        // If a connection is already established, reuse it\n        console.log(\"existing connection available\");\n        return;\n    }\n    const MONGO_URI = `mongodb+srv://adityasuryawanshi21:qObHGEK4HuERhOZP@intellidocs.cglclul.mongodb.net/?retryWrites=true&w=majority`;\n    try {\n        await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGO_URI, {\n            // Replace 'mydatabase' with your actual database name\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n        });\n        console.log(\"Connected to MongoDB\");\n    } catch (error) {\n        console.error(\"Error connecting to MongoDB:\", error.message);\n        process.exit(1); // Exit the Node.js process on connection error\n    }\n}\nasync function disconnectDB() {\n    if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connections[0].readyState)) {\n        await mongoose__WEBPACK_IMPORTED_MODULE_0___default().disconnect();\n        console.log(\"Disconnected from MongoDB\");\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvZGIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUVoQyxlQUFlQyxZQUFZO0lBQ3pCLElBQUlELDJFQUFrQyxFQUFFO1FBQ3RDLG1EQUFtRDtRQUNuREksUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDRixDQUFDO0lBRUYsTUFBTUMsWUFBWSxDQUFDLCtHQUErRyxDQUFDO0lBRWxJLElBQUk7UUFDRixNQUFNTix1REFBZ0IsQ0FBQ00sV0FBVztZQUNoQyxzREFBc0Q7WUFDdERFLGlCQUFpQixJQUFJO1lBQ3JCQyxvQkFBb0IsSUFBSTtRQUMxQjtRQUNBTCxRQUFRQyxHQUFHLENBQUM7SUFDZCxFQUFFLE9BQU9LLE9BQU87UUFDZE4sUUFBUU0sS0FBSyxDQUFDLGdDQUFnQ0EsTUFBTUMsT0FBTztRQUMzREMsUUFBUUMsSUFBSSxDQUFDLElBQUksK0NBQStDO0lBQ2xFO0FBQ0Y7QUFFQSxlQUFlQyxlQUFlO0lBQzVCLElBQUlkLDJFQUFrQyxFQUFFO1FBQ3RDLE1BQU1BLDBEQUFtQjtRQUN6QkksUUFBUUMsR0FBRyxDQUFDO0lBQ2QsQ0FBQztBQUNIO0FBRW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFwZXJib3QvLi9zcmMvZGIuanM/MGNmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuXG5hc3luYyBmdW5jdGlvbiBjb25uZWN0REIoKSB7XG4gIGlmIChtb25nb29zZS5jb25uZWN0aW9uc1swXS5yZWFkeVN0YXRlKSB7XG4gICAgLy8gSWYgYSBjb25uZWN0aW9uIGlzIGFscmVhZHkgZXN0YWJsaXNoZWQsIHJldXNlIGl0XG4gICAgY29uc29sZS5sb2coJ2V4aXN0aW5nIGNvbm5lY3Rpb24gYXZhaWxhYmxlJylcbiAgICByZXR1cm47XG4gIH1cblxuXHRjb25zdCBNT05HT19VUkkgPSBgbW9uZ29kYitzcnY6Ly9hZGl0eWFzdXJ5YXdhbnNoaTIxOnFPYkhHRUs0SHVFUmhPWlBAaW50ZWxsaWRvY3MuY2dsY2x1bC5tb25nb2RiLm5ldC8/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5YFxuXG4gIHRyeSB7XG4gICAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdChNT05HT19VUkksIHtcbiAgICAgIC8vIFJlcGxhY2UgJ215ZGF0YWJhc2UnIHdpdGggeW91ciBhY3R1YWwgZGF0YWJhc2UgbmFtZVxuICAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTW9uZ29EQicpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNvbm5lY3RpbmcgdG8gTW9uZ29EQjonLCBlcnJvci5tZXNzYWdlKTtcbiAgICBwcm9jZXNzLmV4aXQoMSk7IC8vIEV4aXQgdGhlIE5vZGUuanMgcHJvY2VzcyBvbiBjb25uZWN0aW9uIGVycm9yXG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZGlzY29ubmVjdERCKCkge1xuICBpZiAobW9uZ29vc2UuY29ubmVjdGlvbnNbMF0ucmVhZHlTdGF0ZSkge1xuICAgIGF3YWl0IG1vbmdvb3NlLmRpc2Nvbm5lY3QoKTtcbiAgICBjb25zb2xlLmxvZygnRGlzY29ubmVjdGVkIGZyb20gTW9uZ29EQicpO1xuICB9XG59XG5cbmV4cG9ydCB7IGNvbm5lY3REQiwgZGlzY29ubmVjdERCIH07XG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjb25uZWN0REIiLCJjb25uZWN0aW9ucyIsInJlYWR5U3RhdGUiLCJjb25zb2xlIiwibG9nIiwiTU9OR09fVVJJIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImVycm9yIiwibWVzc2FnZSIsInByb2Nlc3MiLCJleGl0IiwiZGlzY29ubmVjdERCIiwiZGlzY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/db.js\n");

/***/ }),

/***/ "(api)/./src/models/MyFile.js":
/*!******************************!*\
  !*** ./src/models/MyFile.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst Schema = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema);\nconst MyFileSchema = new Schema({\n    fileName: {\n        type: String,\n        required: [\n            true,\n            \"Filename is a required field.\"\n        ],\n        trim: true,\n        maxLength: 100,\n        unique: true\n    },\n    fileUrl: {\n        type: String,\n        required: [\n            true,\n            \"File Url is a required field.\"\n        ],\n        trim: true,\n        maxLength: 100,\n        unique: true\n    },\n    isProcessed: {\n        type: Boolean,\n        default: false\n    },\n    vectorIndex: {\n        type: String,\n        maxLength: 100,\n        unique: true,\n        required: false\n    }\n}, {\n    timestamps: true\n});\nconst MyFileModel = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models.myFile) || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"myFile\", MyFileSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyFileModel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWxzL015RmlsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0I7QUFFL0IsTUFBTUMsU0FBU0Qsd0RBQWU7QUFFOUIsTUFBTUUsZUFBZSxJQUFJRCxPQUFPO0lBQzlCRSxVQUFVO1FBQ1JDLE1BQU1DO1FBQ05DLFVBQVU7WUFBQyxJQUFJO1lBQUU7U0FBZ0M7UUFDakRDLE1BQU0sSUFBSTtRQUNWQyxXQUFXO1FBQ1hDLFFBQVEsSUFBSTtJQUNkO0lBQ0FDLFNBQVM7UUFDUE4sTUFBTUM7UUFDTkMsVUFBVTtZQUFDLElBQUk7WUFBRTtTQUFnQztRQUNqREMsTUFBTSxJQUFJO1FBQ1ZDLFdBQVc7UUFDWEMsUUFBUSxJQUFJO0lBQ2Q7SUFDQUUsYUFBYTtRQUNYUCxNQUFNUTtRQUNOQyxTQUFTLEtBQUs7SUFDaEI7SUFDQUMsYUFBYTtRQUNYVixNQUFNQztRQUNORyxXQUFXO1FBQ1hDLFFBQVEsSUFBSTtRQUNaSCxVQUFVLEtBQUs7SUFDakI7QUFDRixHQUFHO0lBQ0RTLFlBQVksSUFBSTtBQUNsQjtBQUVBLE1BQU1DLGNBQWNoQiwrREFBc0IsSUFBSUEscURBQWMsQ0FBQyxVQUFVRTtBQUd2RSxpRUFBZWMsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BhcGVyYm90Ly4vc3JjL21vZGVscy9NeUZpbGUuanM/NmNjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5cbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcblxuY29uc3QgTXlGaWxlU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIGZpbGVOYW1lOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ0ZpbGVuYW1lIGlzIGEgcmVxdWlyZWQgZmllbGQuJ10sXG4gICAgdHJpbTogdHJ1ZSxcbiAgICBtYXhMZW5ndGg6IDEwMCxcbiAgICB1bmlxdWU6IHRydWUsXG4gIH0sXG4gIGZpbGVVcmw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCAnRmlsZSBVcmwgaXMgYSByZXF1aXJlZCBmaWVsZC4nXSxcbiAgICB0cmltOiB0cnVlLFxuICAgIG1heExlbmd0aDogMTAwLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgfSxcbiAgaXNQcm9jZXNzZWQ6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICB9LFxuICB2ZWN0b3JJbmRleDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBtYXhMZW5ndGg6IDEwMCxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9LFxufSwge1xuICB0aW1lc3RhbXBzOiB0cnVlLFxufSk7XG5cbmNvbnN0IE15RmlsZU1vZGVsID0gbW9uZ29vc2UubW9kZWxzLm15RmlsZSB8fCBtb25nb29zZS5tb2RlbCgnbXlGaWxlJywgTXlGaWxlU2NoZW1hKTtcblxuXG5leHBvcnQgZGVmYXVsdCBNeUZpbGVNb2RlbDsiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJTY2hlbWEiLCJNeUZpbGVTY2hlbWEiLCJmaWxlTmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInRyaW0iLCJtYXhMZW5ndGgiLCJ1bmlxdWUiLCJmaWxlVXJsIiwiaXNQcm9jZXNzZWQiLCJCb29sZWFuIiwiZGVmYXVsdCIsInZlY3RvckluZGV4IiwidGltZXN0YW1wcyIsIk15RmlsZU1vZGVsIiwibW9kZWxzIiwibXlGaWxlIiwibW9kZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/models/MyFile.js\n");

/***/ }),

/***/ "(api)/./src/openaiServices.js":
/*!*******************************!*\
  !*** ./src/openaiServices.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"genearteAnswerGemini\": () => (/* binding */ genearteAnswerGemini),\n/* harmony export */   \"generateEmbeddingsGemini\": () => (/* binding */ generateEmbeddingsGemini)\n/* harmony export */ });\nconst { GoogleGenerativeAI  } = __webpack_require__(/*! @google/generative-ai */ \"@google/generative-ai\");\nconst genAI = new GoogleGenerativeAI(\"AIzaSyDfazWK5xqM82qJqxGTfqrWMac6PE8Cz6o\");\nconst generateEmbeddingsGemini = async (text)=>{\n    const model = genAI.getGenerativeModel({\n        model: \"embedding-001\"\n    });\n    const result = await model.embedContent(text);\n    const embedding = result.embedding;\n    return embedding.values;\n};\nconst genearteAnswerGemini = async (prompt)=>{\n    try {\n        const model = genAI.getGenerativeModel({\n            model: \"gemini-pro\"\n        });\n        const result = await model.generateContent(prompt);\n        return result.response.text();\n    } catch (e) {\n        console.log(\"Error while completion : \" + e);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvb3BlbmFpU2VydmljZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNLEVBQUVBLG1CQUFrQixFQUFFLEdBQUdDLG1CQUFPQSxDQUFDLG9EQUF1QjtBQUU5RCxNQUFNQyxRQUFRLElBQUlGLG1CQUFtQjtBQUU5QixNQUFNRywyQkFBMkIsT0FBT0MsT0FBUztJQUN2RCxNQUFNQyxRQUFRSCxNQUFNSSxrQkFBa0IsQ0FBQztRQUFFRCxPQUFPO0lBQWdCO0lBQ2hFLE1BQU1FLFNBQVMsTUFBTUYsTUFBTUcsWUFBWSxDQUFDSjtJQUN4QyxNQUFNSyxZQUFZRixPQUFPRSxTQUFTO0lBQ2xDLE9BQU9BLFVBQVVDLE1BQU07QUFDeEIsRUFBQztBQUVNLE1BQU1DLHVCQUF1QixPQUFPQyxTQUFXO0lBQ3JELElBQUc7UUFDRixNQUFNUCxRQUFRSCxNQUFNSSxrQkFBa0IsQ0FBQztZQUFFRCxPQUFPO1FBQWE7UUFDN0QsTUFBTUUsU0FBUyxNQUFNRixNQUFNUSxlQUFlLENBQUNEO1FBQzNDLE9BQU9MLE9BQU9PLFFBQVEsQ0FBQ1YsSUFBSTtJQUM1QixFQUFDLE9BQU1XLEdBQUU7UUFDUkMsUUFBUUMsR0FBRyxDQUFDLDhCQUE4QkY7SUFDM0M7QUFDRCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFwZXJib3QvLi9zcmMvb3BlbmFpU2VydmljZXMuanM/YzdhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEdvb2dsZUdlbmVyYXRpdmVBSSB9ID0gcmVxdWlyZShcIkBnb29nbGUvZ2VuZXJhdGl2ZS1haVwiKTtcblxuY29uc3QgZ2VuQUkgPSBuZXcgR29vZ2xlR2VuZXJhdGl2ZUFJKFwiQUl6YVN5RGZheldLNXhxTTgycUpxeEdUZnFyV01hYzZQRThDejZvXCIpO1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVFbWJlZGRpbmdzR2VtaW5pID0gYXN5bmMgKHRleHQpID0+IHtcblx0Y29uc3QgbW9kZWwgPSBnZW5BSS5nZXRHZW5lcmF0aXZlTW9kZWwoeyBtb2RlbDogXCJlbWJlZGRpbmctMDAxXCIgfSk7XG5cdGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmVtYmVkQ29udGVudCh0ZXh0KTtcblx0Y29uc3QgZW1iZWRkaW5nID0gcmVzdWx0LmVtYmVkZGluZztcblx0cmV0dXJuIGVtYmVkZGluZy52YWx1ZXM7XG59XG5cbmV4cG9ydCBjb25zdCBnZW5lYXJ0ZUFuc3dlckdlbWluaSA9IGFzeW5jIChwcm9tcHQpID0+IHtcblx0dHJ5e1xuXHRcdGNvbnN0IG1vZGVsID0gZ2VuQUkuZ2V0R2VuZXJhdGl2ZU1vZGVsKHsgbW9kZWw6IFwiZ2VtaW5pLXByb1wiIH0pO1xuXHRcdGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmdlbmVyYXRlQ29udGVudChwcm9tcHQpO1xuXHRcdHJldHVybiByZXN1bHQucmVzcG9uc2UudGV4dCgpO1xuXHR9Y2F0Y2goZSl7XG5cdFx0Y29uc29sZS5sb2coXCJFcnJvciB3aGlsZSBjb21wbGV0aW9uIDogXCIgKyBlKTtcblx0fVxufSJdLCJuYW1lcyI6WyJHb29nbGVHZW5lcmF0aXZlQUkiLCJyZXF1aXJlIiwiZ2VuQUkiLCJnZW5lcmF0ZUVtYmVkZGluZ3NHZW1pbmkiLCJ0ZXh0IiwibW9kZWwiLCJnZXRHZW5lcmF0aXZlTW9kZWwiLCJyZXN1bHQiLCJlbWJlZENvbnRlbnQiLCJlbWJlZGRpbmciLCJ2YWx1ZXMiLCJnZW5lYXJ0ZUFuc3dlckdlbWluaSIsInByb21wdCIsImdlbmVyYXRlQ29udGVudCIsInJlc3BvbnNlIiwiZSIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/openaiServices.js\n");

/***/ }),

/***/ "(api)/./src/pinecone.js":
/*!*************************!*\
  !*** ./src/pinecone.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pinecone-database/pinecone */ \"@pinecone-database/pinecone\");\n/* harmony import */ var _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_0__);\n\nconst pinecone = new _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_0__.Pinecone({\n    apiKey: \"ce68792c-9c25-466b-998d-acbd26b2b015\"\n});\nconsole.log(\"pinecone initialized\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pinecone);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGluZWNvbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBRXZELE1BQU1DLFdBQVUsSUFBSUQsaUVBQVFBLENBQUM7SUFBQ0UsUUFBTztBQUFzQztBQUUzRUMsUUFBUUMsR0FBRyxDQUFDO0FBRVosaUVBQWVILFFBQVFBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXBlcmJvdC8uL3NyYy9waW5lY29uZS5qcz9hODkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpbmVjb25lIH0gZnJvbSBcIkBwaW5lY29uZS1kYXRhYmFzZS9waW5lY29uZVwiO1xuXG5jb25zdCBwaW5lY29uZT0gbmV3IFBpbmVjb25lKHthcGlLZXk6J2NlNjg3OTJjLTljMjUtNDY2Yi05OThkLWFjYmQyNmIyYjAxNSd9KVxuXG5jb25zb2xlLmxvZygncGluZWNvbmUgaW5pdGlhbGl6ZWQnKVxuXG5leHBvcnQgZGVmYXVsdCBwaW5lY29uZSJdLCJuYW1lcyI6WyJQaW5lY29uZSIsInBpbmVjb25lIiwiYXBpS2V5IiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pinecone.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/process.js"));
module.exports = __webpack_exports__;

})();